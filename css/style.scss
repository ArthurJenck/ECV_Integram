@import "variables";

/*--------------------------------------------------
GLOBAL
---------------------------------------------------*/
/* Auteur : Arthur Jenck
Date : 
Version : 1.2
Site de l'auteur : http://ajenck.ecv-monsite.fr */

/* @import url('https://fonts.googleapis.com/css2?family=Sora:wght@100;200;300;400;500;600;700;800&display=swap');
font-family: 'Sora', sans-serif; */

@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;500;700&display=swap');


/* Je définis les couleurs qui reviennent souvent, comme ça si d'un coup la charte graphique change je n'ai qu'à modifier ces valeurs et basta. Pareil pour un éventuel mode sombre */
// Maintenant que ce fichier est un style en Sass, je n'ai plus besoin de toucher à la :root. Je peux importer mon fichier variables quand j'en aurai besoin
// :root {
//     --blanc-pur: #fff;
//     --noir-pur: #000;
//     --text-couleur: #1E2A37;
//     --bg-couleur: #f6f8fa;
// }


/* Ici on retrouve les commandes que j'ai mises dans ma templace de style.css, donc pour enlever les padding et margin par défaut de tous les éléments de la page. Je mets aussi la police utilisée dans tout le site, ici la Roboto. J'ai aussi mis une Verdana en police de secours */
body, * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: 'Roboto', Verdana, sans-serif;
    color: $text-couleur;
}

/*--------------------------------------------------*/

body {
    padding: 2rem 7rem;
    background: $bg-couleur;
}

/* La balise <main> sert essentiellement à la grid. J'ai créé trois lignes, une pour le hero, une pour les stories et une pour les actualités. Les colonnes, il y en a une pour le aside, et une pour le reste des sections. Les lignes ont une hauteur qui s'adapte au contenu, excepté pour celle du hero. Celle-ci sera toujours à 19% de la hauteur de l'écran. Pour les colonnes, c'est le aside qui a une largeur définie. On a aussi un gap défini pour coller à la maquette figma, mais en rem pour s'adapter à des changements responsive */
main {
    display: grid;
    grid-template: 36vh auto auto / 19vw 1fr;
    gap: 3.125rem;
}

/* Le header occupe tout l'espace disponible, soit toute la largeur du body. Sa hauteur est définie pour ne pas varier lors des changements de résolution. Il y a aussi un display en flex pour positionner les éléments du header, à savoir le logo Instagram et le conteneur avec la barre de recherche et le bouton pour ajouter une photo. La margin-bottom sépare le header du main et du reste de la page */
header {
    width: 100%;
    height: 3.75rem;
    display: flex;
    justify-content: space-between;
    margin-bottom: 3.175rem;
}

/* Cette propriété sert à aligner le logo Instagram au centre de son conteneur */
.header-icone-logo-insta {
    display: flex;
    align-items: center;
}

/* J'ai remarqué sur le document Figma que le logo n'était pas exactement au centre du header. J'ai alors ajouté une légère marge au bas du fichier */
.header-logo {
    height: 3rem;
    margin-bottom: 0.05rem;
}

/* Pour l'instant, le logo du header en version mobile n'a pas besoin d'apparaître */
.header-logo-mobile {
    display: none;
}

.search-container {
    display: flex;
    justify-content: center;
    align-items: center;
}


.searchbar-container {
    position: relative;
    width: auto;
    height: auto;
    margin-right: 1rem;
}

/* On stylise un peu la searchbar pour la rendre plus moderne et épurée. Une transition est un peu là pour gratter des points bonus. Le padding est là pour que le curseur ne soit pas collé à la bordure lorsque l'utilisateur clique sur la barre de recherche */
.searchbar {
    background: #DBE5EE;
    border-radius: 31px;
    width: 6.5rem;
    height: 3.75rem;
    border: none;
    transition: 0.2s all ease-in-out;
    padding: 1rem 32% 1rem 1.5rem;
}

/* Lorsque l'utilisateur clique pour taper du texte, la barre de recherche s'allonge. N'ayant pas trouvé comment placer le curseur dans la barre de recherche, j'avais appliqué un cache-misère en mettant un text-align: center;. Après avoir pris une journée off, j'ai réalisé que j'étais très con et qu'un padding sur la barre suffisait */
.searchbar:focus {
    width: 15rem;
    /* text-align: center; */
}

/* L'icône de loupe doit aussi être placée dans la barre de recherche */
.header-icone-recherche {
    height: 1.25rem;
    position: absolute;
    height: auto;
    margin: auto auto;
    top: 0;
    bottom: 0;
    right: 20%;
}

/* Pour le bouton, j'ai juste mis un background en dégradé et ai suivi les propriétés décrites sur la maquette Figma */
.header-btn {
    background: linear-gradient(220.96deg, #8C3AAA 9.21%, #DB3B75 49.47%, #F28F3D 91.44%);
    border: none;
    border-radius: 12px;
    font-size: 1.125rem;
    display: flex;
    align-items: center;
    height: 100%;
    cursor: pointer;
    color: $blanc-pur;
    padding: 0.5rem;
}

/* L'icône de + aurait pu être refaîte en CSS mais c'était vachement plus rapide et court en code pour un résultat similaire de l'intégrer en fichier .svg */
.header-icone-ajout {
    margin-right: 0.5rem;
}

/* Pour l'instant, toute la partie du menu burger n'existe pas */
.burger-toggle, .burger-nav, .burger-icon {
    display: none;
}

/* ---------------------------------------------- */

/* Vu que j'ai vachement bien compris les grid, je peux me permettre d'économiser des lignes de code en mettant un rapide grid-area pour placer mon aside immédiatement dans la grid du main */
aside {
    height: fit-content;
    grid-area: 1 / 1 / span 3 / 2;
    position: relative;
    background-color: $blanc-pur;
    border-radius: 20px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.sidebar-text-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.profile-numbers-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    text-align: center;
    width: 100%;
    padding: 0 1.375rem 2.25rem 1.375rem;
}

.profile-name {
    font-size: 1.375rem;
    font-weight: 500;
    margin: 0.5rem auto 0.375rem auto;
}

.profile-username {
    font-weight: 300;
    font-size: 1rem;
}

.profile-desc {
    font-size: 1.125rem;
    font-weight: 300;
    margin: 1.875rem 1.375rem;
}

.profile-numbers-name {
    font-weight: 300;
    font-size: 1rem;
}

.sidebar-photo-profile {
    width: 19vw;
    height: 36vh;
    object-fit: cover;
    border-radius: 20px 20px 0 0;
}

/* L'icône d'utilisateur calcule la hauteur de l'image de profil de Jean Robinet, de 36vh, et y enlève les 4rem de sa propre hauteur (pas très clair). Ensuite on enlève aussi 0.84rem pour éloigner l'icône du bord inférieur de l'image */
.sidebar-user-icon {
    position: absolute;
    right: 0.84rem;
    top: calc(36vh - 4rem - 0.84rem);
    width: 4rem;
    height: 4rem;
    display: inline;
}

/* ---------------------------------------- */

.hero {
    grid-area: 1 / 2 / 2 / 3;
    background: url("../img/accueil-photo-bg.jpg");
    background-size: cover;
    border-radius: 20px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
}

.hero-title {
    font-size: 5.625rem;
    font-weight: 700;
    color: $blanc-pur;
    position: relative;
    top: 0.5rem;
}

.hero-username {
    font-size: 3.75rem;
    color: $blanc-pur;
    font-weight: 300;
    position: relative;
    bottom: 10.31px;
}

/* ----------------------------------------- */

.stories {
    grid-area: 2 / 2 / 3 / 3;
    height: fit-content;
}

.stories-title, .actus-title {
    font-weight: 700;
    font-size: 1.875rem;
    margin-bottom: 1.25rem;
}

.stories-icone {
    position: relative;
    background: linear-gradient(to bottom, #833AB4 0%, #FD1D1D 50%, #FCB045 100%);
    padding: 1rem;
    max-width: 15vw;
    padding: 0.3125rem;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.stories-photos {
    width: 8.75vw;
    padding: 0.625rem;
    background-color: white;
    border-radius: 50%;
}

.profils-gallerie {
    display: flex;
    justify-content: space-between;
}

/* ---------------------------------------- */

.actus {
    grid-area: 3 / 2 / 4 / 3;
}

/* Ici, on a une autre grid pour les cartes d'actualité. 2 lignes égales, donc de 1fr chacune, et 3 colonnes égales elles-aussi. Il y a aussi un gap */
.actus-cartes-container {
    display: grid;
    grid-template: repeat(2, 1fr) / repeat(3, 1fr);
    gap: 1.625rem;
}

.actus-carte {
    width: 100%;
}

.actus-carte:nth-child(3) {
    grid-area: 1 / 3 / span 2 / 4;
}

.actus-carte:nth-child(4) {
    grid-area: 2 / 1 / 3 / span 2;
}

.actus-couv-pic {
    border-radius: 20px;
    width: 100%;
}

.actus-user-profile {
    display: flex;
    justify-content: flex-start;
    align-items: center;
}

.actus-user-name {
    margin-left: 0.4375rem;
    font-weight: 300;
    text-decoration: none;
    font-size: 1.125rem;
}

/* --------------------------------------------- */

// La plupart des sites développent trois versions ; une pour tablettes, une pour mobiles et une pour bureaux. J'ai donc adapté mon site en tablette pour cocher les trois cases
@media all and (min-width: 600px) and (max-width: 1300px) {
    body {
        padding: 0;
    }

    /* Heureusement que j'ai utilisé un dsplay: grid;, maintenant je n'ai qu'à changer la template et la grid-area pour replacer la plupart des éléments. Le padding calcule la hauteur du header et y ajoute un petit écart */
    main {
        grid-template: repeat(4, auto) / 1fr;
        padding: calc(3.125rem + 5.7rem) 1.25rem 3.125rem 1.25rem;
    }

    /* ------------------------------------------ */

    /* Les z-index préparent pour le menu burger */
    header {
        background-color: #1E2A37;
        grid-area: 1 / 1 / 2 / 2;
        padding: 1.875rem 1.25rem;
        margin-bottom: 0;
        position: fixed;
        z-index: 3;
        height: 5.7rem;
    }

    /* On enlève le logo précédent pour y mettre celui de la version mobile */
    .header-logo {
        display: none;
    }

    .header-logo-mobile {
        display: block;
        z-index: 3;
    }

    /* On enlève aussi la barre de recherche et le bouton, qui ne sont pas là en responsive */
    .search-container {
        display: none;
    }

    /* On fait maintenant apparaître tous les éléments du burger. On va ensuite les styliser */
    .burger-toggle, .burger-nav, .burger-icon {
        display: block;
    }

    /* On commence par la liste de liens du menu. Le texte est centré. Le menu burger est fixé pour occuper tout l'écran. La liste de liens n'a pas de puce. Le haut a un écart afin de faire de la place au header. Le padding en prend aussi compte. Les éléments sont tous dans une flexbox, direction colonne, et pour le moment le menu est caché au-dessus de l'écran visible */
    .burger-nav {
        text-align: center;
        position: fixed;
        width: 100vw;
        min-height: 100vh;
        list-style: none;
        top: 5.7rem;
        background-color: $text-couleur;
        z-index: 1;
        padding: calc(15vh - 3rem) 30vw 22.5vh 30vw;
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        align-items: center;
        transform: translateY(-100vh);
        transition: 0.2s ease-in-out;
    }

    /* Ici on prépare le texte du burger */
    .burger-link, .burger-link h2, .burger-link h3 {
        color: $text-couleur;
        z-index: 2;
    }

    /* Le premier élément du menu burger consiste en le profil de l'utilisateur, et il est disposé en colonne centrée */
    .burger-link:first-child {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    /* L'input checkbox va toujours se trouver au même endroit dans le header, au-dessus de tout autre élément. Il est aussi caché et c'est là qu'a lieu l'astuce */
    .burger-toggle {
        position: fixed;
        width: 2.5rem;
        height: 1.6825rem;
        z-index: 4;
        top: 1.875rem;
        right: 1.25rem;
        opacity: 0;
    }

    /* Lorsque la checkbox est cochée, le menu burger descend et apparaît. Pour ce qui est de l'apparition, j'ai bien évident regardé en mode prototype si la maquette avait des instructions sur les déplacements du menu burger ouvert, ou même sur les liens survolés en mode Desktop. Il n'y avait pas d'instruction sur Figma, donc j'aurais dû laisser par défaut pour coller à la demande client. Cela dit, vu que ce n'est qu'un exercice, autant montrer ce que je peux faire */
    .burger-toggle:checked~.burger-nav {
        transform: translate(0);
    }

    /* L'icône du burger est visible, mais placée juste en-dessous du toggle, la checkbox. Comme ça, l'utilisateur clique sur l'icône mais coche en réalité la checkbox. Les lignes span à l'intérieur de la div container sont mises en colonnes */
    .burger-icon {
        position: fixed;
        width: 2.5rem;
        height: 1.6825rem;
        z-index: 3;
        top: 1.875rem;
        right: 1.25rem;
        opacity: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        align-content: space-between;
    }

    /* Ces lignes justement sont définies juste ici pour occuper toute la largeur précise du container et de la checkbox */
    .burger-icon .line {
        background-color: $blanc-pur;
        border-radius: 1rem;
        width: 2.5rem;
        height: 5px;
    }

    /* Encore pour me la pèter, j'ai mis une transition. Je la prépare en mettant l'origine à 10% des span, qui se trouve être le milieu des lignes */
    .burger-icon .line1, .burger-icon .line3 {
        transform-origin: 10%;
        transition: 0.2s all ease-in-out;
    }

    /* Quand le toggle est coché, les deux lignes tournent légèrement sur elles-mêmes pour passer de délicieux pains à hamburger à une croix servant à fermer le menu */
    .burger-toggle:checked~.burger-icon .line1 {
        display: block;
        transform: rotate(45deg);
    }

    .burger-toggle:checked~.burger-icon .line3 {
        display: block;
        transform: rotate(-45deg);
    }

    /* La deuxième ligne ne sert plus à rien dans la croix, elle est donc cachée. Perspective d'amélioration : La faire tourner aussi pour former la croix avec ses deux comparses */
    .burger-toggle:checked~.burger-icon .line2 {
        visibility: hidden;
    }

    .burger-link {
        text-decoration: none;
        font-size: 1.125rem;
        font-weight: 500;
    }

    .menu-title-name {
        font-weight: 500;
        font-size: 1.375rem;
    }

    .menu-username {
        font-size: 1rem;
        font-weight: 300;
    }

    /* ---------------------------------- */

    section {
        width: 90vw;
    }   

    aside {
        grid-area: 1 / 1 / 2 / 2;
        width: 100%;
        flex-direction: row;
        height: calc(90vh - 5.7rem);
    }

    .sidebar-photo-profile {
        width: 100%;
        max-width: 50vw;
        height: 100%;
        object-position: top;
    }

    .sidebar-user-icon {
        top: 60vh;
        left: 1.25rem;
        height: 7rem;
        width: 7rem;
    }

    .profile-desc {
        width: 60%;
        text-align: center;
    }

    .profile-numbers-container {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-content: center;
    }

    .profile-numbers-single-article {
        padding-bottom: 2rem;
    }

    .profile-numbers {
        font-size: 1.5rem;
    }
    
    .profile-numbers-name {
        font-size: 0.8rem;
    }

     /* ------------------------------- */

    .hero {
        grid-area: 2 / 1 / 3 / 2;
        height: 20rem;
        width: 100%;
    }

    .hero-title {
        font-size: 2.5rem;
        top: 0;
        margin-bottom: 2px;
    }

    .hero-username {
        font-size: 1.875rem;
        font-weight: 700;
        bottom: 0;
    }

    /* --------------------------------- */

    .stories {
        grid-area: 3 / 1 / 4 / 2;
        width: 100%;
    }

    .stories-title {
        font-size: 1.5rem;
    }

    .stories-photos {
        width: 12.5vw;
    }

    .stories-icone {
        min-width: 12.5vw;
    }

    /* --------------------------------- */

    .actus {
        grid-area: 4 / 1 / 5 / 2;
        width: 100%;
    }

    .actus-title {
        font-size: 1.5rem;
    }

    .actus-cartes-container {
        grid-template: repeat(4, auto) / 100%;
        margin: 0 auto;
        width: 60vw;
        background-color: $blanc-pur;
        box-sizing: content-box;
        padding: 5rem 10vw 5rem 10vw;
        border-radius: 20px;
    }

    .actus-carte {
        width: 100%;
    }

    .actus-couv-pic {
        height: 27rem;
        width: 100%;
        object-fit: cover;
    }

    .actus-carte:nth-child(1) {
        grid-area: 1 / 1 / 2 / 2;
    }

    .actus-carte:nth-child(2) {
        grid-area: 2 / 1 / 3 / 2;
    }

    .actus-carte:nth-child(3) {
        grid-area: 3 / 1 / 4 / 2;
    }

    /* Même si ça m'a pas trop plus de faire ça, j'ai changé l'image dans la 3e couverture, car elle n'était pas pareille que celle de la version Desktop */
    .actus-carte:nth-child(3) .actus-couv-pic {
        content: url(../img/mob-actu-photo-3.jpg);
    }

    .actus-carte:nth-child(4) {
        grid-area: 4 / 1 / 5 / 2;
    }
}





// -------------------------------------------------

/* On passe au responsive mobile, la commande aurait pu être plus courte mais j'ai l'habitude de mettre all and, et en plus ça rend hommage à Éric, mon professeur de l'année dernière. La plupart des commandes sont exactement les mêmes que dans le responsive tablette et c'est normal, peu d'éléments changent de l'un à l'autre. */
@media all and (max-width: 600px) {
    body {
        padding: 0;
    }

    main {
        grid-template: repeat(4, auto) / 1fr;
        padding: calc(3.125rem + 5.7rem) 1.25rem 3.125rem 1.25rem;
    }

    /* ------------------------------------------ */

    header {
        background-color: #1E2A37;
        grid-area: 1 / 1 / 2 / 2;
        padding: 1.875rem 1.25rem;
        margin-bottom: 0;
        position: fixed;
        z-index: 3;
        height: 5.7rem;
    }

    .header-logo {
        display: none;
    }

    .header-logo-mobile {
        display: block;
        z-index: 3;
    }

    .search-container {
        display: none;
    }

    .burger-toggle, .burger-nav, .burger-icon {
        display: block;
    }

    .burger-nav {
        text-align: center;
        position: fixed;
        width: 100vw;
        min-height: 100vh;
        list-style: none;
        top: 5.7rem;
        background-color: $text-couleur;
        z-index: 1;
        padding: calc(15vh - 3rem) 30vw 22.5vh 30vw;
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        align-items: center;
        transform: translateY(-100vh);
        transition: 0.2s ease-in-out;
    }

    .burger-link, .burger-link h2, .burger-link h3 {
        color: $text-couleur;
        z-index: 2;
    }

    .burger-link:first-child {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .burger-toggle {
        position: fixed;
        width: 2.5rem;
        height: 1.6825rem;
        z-index: 4;
        top: 1.875rem;
        right: 1.25rem;
        opacity: 0;
    }

    .burger-toggle:checked~.burger-nav {
        transform: translate(0);
    }

    .burger-icon {
        position: fixed;
        width: 2.5rem;
        height: 1.6825rem;
        z-index: 3;
        top: 1.875rem;
        right: 1.25rem;
        opacity: 1;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        align-items: center;
        align-content: space-between;
    }

    .burger-icon .line {
        background-color: $blanc-pur;
        border-radius: 1rem;
        width: 2.5rem;
        height: 5px;
    }

    .burger-icon .line1, .burger-icon .line3 {
        transform-origin: 10%;
        transition: 0.2s all ease-in-out;
    }

    .burger-toggle:checked~.burger-icon .line1 {
        display: block;
        transform: rotate(45deg);
    }

    .burger-toggle:checked~.burger-icon .line3 {
        display: block;
        transform: rotate(-45deg);
    }

    .burger-toggle:checked~.burger-icon .line2 {
        visibility: hidden;
    }

    .burger-link {
        text-decoration: none;
        font-size: 1.125rem;
        font-weight: 500;
    }

    .menu-title-name {
        font-weight: 500;
        font-size: 1.375rem;
    }

    .menu-username {
        font-size: 1rem;
        font-weight: 300;
    }

    /* ---------------------------------- */

    section {
        width: 90vw;
    }

    aside {
        grid-area: 1 / 1 / 2 / 2;
        width: 100%;
    }

    .sidebar-photo-profile {
        width: 100%;
        height: 18.75rem;
        object-position: top;
    }

    .sidebar-user-icon {
        top: calc(18.75rem - 4rem - 0.84rem);
    }

    .profile-numbers-container {
        padding-bottom: 2rem;
    }

    /* ------------------------------- */

    .hero {
        grid-area: 2 / 1 / 3 / 2;
        height: 9.5625rem;
    }

    .hero-title {
        font-size: 2.5rem;
        top: 0;
        margin-bottom: 2px;
    }

    .hero-username {
        font-size: 1.875rem;
        font-weight: 700;
        bottom: 0;
    }

    /* --------------------------------- */

    .stories {
        grid-area: 3 / 1 / 4 / 2;
    }

    .stories-icone:nth-of-type(4), .stories-icone:nth-of-type(5) {
        display: none;
    }

    .stories-title {
        font-size: 1.5rem;
    }

    .stories-photos {
        width: 20vw;
    }

    .stories-icone {
        min-width: 22.5vw;
    }

    /* --------------------------------- */

    .actus {
        grid-area: 4 / 1 / 5 / 2;
        width: 100%;
    }

    .actus-title {
        font-size: 1.5rem;
    }

    .actus-cartes-container {
        grid-template: repeat(4, auto) / 100%;
    }

    .actus-carte {
        width: 100%;
    }

    .actus-couv-pic {
        height: 27rem;
        width: 100%;
        object-fit: cover;
    }

    .actus-carte:nth-child(1) {
        grid-area: 1 / 1 / 2 / 2;
    }

    .actus-carte:nth-child(2) {
        grid-area: 2 / 1 / 3 / 2;
    }

    .actus-carte:nth-child(3) {
        grid-area: 3 / 1 / 4 / 2;
    }

    .actus-carte:nth-child(3) .actus-couv-pic {
        content: url(../img/mob-actu-photo-3.jpg);
    }

    .actus-carte:nth-child(4) {
        grid-area: 4 / 1 / 5 / 2;
    }
}